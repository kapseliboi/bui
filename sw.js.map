{"version":3,"sources":["../../../node_modules/workbox-core/_version.js","../../../node_modules/workbox-core/_private/logger.js","../../../node_modules/workbox-core/models/messages/messages.js","../../../node_modules/workbox-core/models/messages/messageGenerator.js","../../../node_modules/workbox-core/_private/WorkboxError.js","../../../node_modules/workbox-core/_private/assert.js","../../../node_modules/workbox-routing/_version.js","../../../node_modules/workbox-routing/utils/constants.js","../../../node_modules/workbox-routing/utils/normalizeHandler.js","../../../node_modules/workbox-routing/Route.js","../../../node_modules/workbox-routing/RegExpRoute.js","../../../node_modules/workbox-core/_private/getFriendlyURL.js","../../../node_modules/workbox-routing/Router.js","../../../node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","../../../node_modules/workbox-routing/registerRoute.js","../../../node_modules/workbox-strategies/_version.js","../../../node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","../../../node_modules/workbox-core/_private/cacheNames.js","../../../node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","../../../node_modules/workbox-core/_private/Deferred.js","../../../node_modules/workbox-core/models/quotaErrorCallbacks.js","../../../node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","../../../node_modules/workbox-core/_private/timeout.js","../../../node_modules/workbox-strategies/StrategyHandler.js","../../../node_modules/workbox-strategies/Strategy.js","../../../node_modules/workbox-strategies/utils/messages.js","../../../node_modules/workbox-strategies/StaleWhileRevalidate.js","../../../node_modules/workbox-strategies/CacheFirst.js","../../../node_modules/workbox-cacheable-response/_version.js","../../../node_modules/workbox-cacheable-response/CacheableResponse.js","../../../node_modules/workbox-cacheable-response/CacheableResponsePlugin.js","../../../node_modules/workbox-core/_private/dontWaitFor.js","../../../node_modules/workbox-core/registerQuotaErrorCallback.js","../../../node_modules/workbox-core/_private/DBWrapper.js","../../../node_modules/workbox-core/_private/deleteDatabase.js","../../../node_modules/workbox-expiration/_version.js","../../../node_modules/workbox-expiration/models/CacheTimestampsModel.js","../../../node_modules/workbox-expiration/CacheExpiration.js","../../../node_modules/workbox-expiration/ExpirationPlugin.js","../../../node_modules/workbox-recipes/_version.js","../../../node_modules/workbox-recipes/googleFontsCache.js","../../../node_modules/workbox-recipes/warmStrategyCache.js","../../../node_modules/workbox-recipes/imageCache.js","../../../node_modules/workbox-recipes/staticResourceCache.js","../../../node_modules/workbox-strategies/NetworkFirst.js","../../../node_modules/workbox-recipes/pageCache.js","../../../node_modules/workbox-routing/setCatchHandler.js","../../../node_modules/workbox-core/_private/waitUntil.js","../../../node_modules/workbox-precaching/_version.js","../../../node_modules/workbox-precaching/utils/createCacheKey.js","../../../node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","../../../node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","../../../node_modules/workbox-precaching/utils/printCleanupDetails.js","../../../node_modules/workbox-precaching/utils/printInstallDetails.js","../../../node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","../../../node_modules/workbox-core/copyResponse.js","../../../node_modules/workbox-precaching/PrecacheStrategy.js","../../../node_modules/workbox-precaching/PrecacheController.js","../../../node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","../../../node_modules/workbox-precaching/matchPrecache.js","../../../node_modules/workbox-recipes/offlineFallback.js","../../../node_modules/workbox-recipes/index.js","../../../node_modules/workbox-recipes/index.mjs","index.js"],"names":["logger","self","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","methodName","normalizedRangeHeader","size","start","end","url","status","cacheName","origin","fallback","code","msg","length","generatorFunction","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","defaultMethod","validMethods","normalizeHandler","handler","assert","handle","Route","match","setCatchHandler","catchHandler","RegExpRoute","regExp","RegExp","result","exec","href","location","index","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","debugMessages","push","has","get","forEach","err","reject","_catchHandler","catch","catchErr","matchResult","undefined","setDefaultHandler","set","registerRoute","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","cacheOkAndOpaquePlugin","cacheWillUpdate","response","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","stripParams","fullURL","ignoreParams","strippedURL","param","searchParams","delete","cacheMatchIgnoreParams","cache","matchOptions","strippedRequestURL","keysOptions","ignoreSearch","cacheKeys","cacheKey","strippedCacheKeyURL","Deferred","promise","resolve","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","timeout","ms","setTimeout","toRequest","input","StrategyHandler","strategy","options","_cacheKeys","ExtendableEvent","assign","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","fetch","mode","FetchEvent","preloadResponse","possiblePreloadResponse","originalRequest","hasCallback","clone","cb","iterateCallbacks","pluginFilteredRequest","fetchResponse","fetchOptions","runCallbacks","fetchAndCachePut","responseClone","cachePut","cacheMatch","cachedResponse","effectiveRequest","getCacheKey","multiMatchOptions","caches","responseToCache","_ensureResponseSafeToCache","open","hasCacheUpdateCallback","oldResponse","put","newResponse","state","statefulCallback","statefulParam","doneWaiting","shift","destroy","pluginsUsed","Strategy","responseDone","handleAll","_getResponse","handlerDone","_awaitComplete","_handle","waitUntilError","strategyStart","strategyName","printFinalResponse","StaleWhileRevalidate","some","p","unshift","logs","fetchAndCachePromise","CacheFirst","CacheableResponse","config","statuses","headers","_statuses","_headers","isResponseCacheable","Response","cacheable","headerName","logFriendlyHeaders","CacheableResponsePlugin","_cacheableResponse","dontWaitFor","registerQuotaErrorCallback","add","DBWrapper","version","onupgradeneeded","onversionchange","_db","_name","_version","_onupgradeneeded","_onversionchange","close","db","openRequestTimedOut","OPEN_TIMEOUT","openRequest","indexedDB","onerror","evt","transaction","abort","onsuccess","bind","getKey","storeName","query","getAllKeys","getAll","count","getAllMatching","entries","includeKeys","direction","txn","done","store","objectStore","target","results","openCursor","cursor","continue","storeNames","onabort","oncomplete","_call","objStore","apply","prototype","methodsToWrap","readonly","readwrite","methods","IDBObjectStore","deleteDatabase","onblocked","DB_NAME","OBJECT_STORE_NAME","normalizeURL","unNormalizedUrl","hash","CacheTimestampsModel","_cacheName","_handleUpgrade","createObjectStore","keyPath","createIndex","unique","setTimestamp","timestamp","id","_getId","getTimestamp","expireEntries","minTimestamp","maxCount","entriesToDelete","entriesNotDeletedCount","urlsDeleted","CacheExpiration","_isRunning","_rerunRequested","maxEntries","maxAgeSeconds","_maxEntries","_maxAgeSeconds","_matchOptions","_timestampModel","Date","now","urlsExpired","updateTimestamp","isURLExpired","expireOlderThan","Infinity","ExpirationPlugin","cachedResponseWillBeUsed","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","dateHeader","parsedDate","headerTime","getTime","isNaN","googleFontsCache","sheetCacheName","cachePrefix","fontCacheName","warmStrategyCache","urls","path","imageCache","defaultMatchCallback","destination","warmCache","staticResourceCache","NetworkFirst","_networkTimeoutSeconds","networkTimeoutSeconds","promises","timeoutId","_getTimeoutPromise","networkPromise","_getNetworkPromise","race","timeoutPromise","onNetworkTimeout","fetchError","clearTimeout","pageCache","asyncFn","returnPromise","REVISION_SEARCH_PARAM","createCacheKey","urlObject","revision","cacheKeyURL","originalURL","PrecacheInstallReportPlugin","updatedURLs","notUpdatedURLs","handlerWillStart","PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","_precacheController","getCacheKeyForURL","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","supportStatus","canConstructResponseFromBodyStream","testResponse","body","copyResponse","modifier","responseURL","clonedResponse","responseInit","Headers","statusText","modifiedResponseInit","blob","PrecacheStrategy","_fallbackToNetwork","fallbackToNetwork","copyRedirectedCacheableResponsesPlugin","_handleInstall","_handleFetch","_useDefaultCacheabilityPluginIfNeeded","wasCached","defaultPluginIndex","cacheWillUpdatePluginCount","defaultPrecacheCacheabilityPlugin","redirected","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","install","activate","addToCacheList","_installAndActiveListenersAdded","urlsToWarnAbout","cacheMode","integrity","warningMessage","installReportPlugin","credentials","currentlyCachedRequests","expectedCacheKeys","values","getURLsToCacheKeys","getCachedURLs","matchPrecache","createHandlerBoundToURL","getOrCreatePrecacheController","offlineFallback","pageFallback","imageFallback","fontFallback","files","addAll","dest","action","skipWaiting"],"mappings":"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","file":"sw.js","sourceRoot":"../demo","sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`);\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return `workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {module:workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise && (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        err = catchErr;\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do. \n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = { ...matchOptions, ignoreSearch: true };\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return (typeof input === 'string') ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * [handle()]{@link module:workbox-strategies.Strategy~handle} or\n * [handleAll()]{@link module:workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof module:workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {module:workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     *     [match callback]{@link module:workbox-routing~matchCallback},\n     *     (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * [match callback]{@link module:workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = await event.preloadResponse;\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail') ?\n            request.clone() : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            throw new WorkboxError('plugin-error-request-will-fetch', {\n                thrownError: err,\n            });\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ?\n                undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = { ...matchOptions, ...{ cacheName } };\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse = (await callback({\n                cacheName,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n                event: this.event,\n            })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback ? await cacheMatchIgnoreParams(\n        // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n        // feature. Consider into ways to only add this behavior if using\n        // precaching.\n        cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions) :\n            null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ?\n                responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n            if (error.name === 'QuotaExceededError') {\n                await executeQuotaErrorCallbacks();\n            }\n            throw error;\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        if (!this._cacheKeys[mode]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    params: this.params,\n                }));\n            }\n            this._cacheKeys[mode] = effectiveRequest;\n        }\n        return this._cacheKeys[mode];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * [`iterateCallbacks()`]{@link module:workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = { ...param, state };\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * [`doneWaiting()`]{@link module:workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * [`waitUntil()`]{@link module:workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while (promise = this._extendLifetimePromises.shift()) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve();\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache = (await callback({\n                request: this.request,\n                response: responseToCache,\n                event: this.event,\n            })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof module:workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * [workbox-core]{@link module:workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * [route]{@link module:workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to [`handle()`]{@link module:workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of [response, done] promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string' ?\n            new Request(options.request) :\n            options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                response = await callback({ error, event, request });\n                if (response) {\n                    break;\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            error = waitUntilError;\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the [`handler`]{@link module:workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {module:workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof module:workbox-strategies.Strategy\n */\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#stale-while-revalidate}\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass StaleWhileRevalidate extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = handler\n            .fetchAndCachePut(request)\n            .catch(() => {\n            // Swallow this error because a 'no-response' error will be thrown in\n            // main handler return flow. This will be in the `waitUntil()` flow.\n        });\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                // NOTE(philipwalton): Really annoying that we have to type cast here.\n                // https://github.com/microsoft/TypeScript/issues/20006\n                response = await fetchAndCachePromise;\n            }\n            catch (err) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network}\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass CacheFirst extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await handler.fetchAndCachePut(request);\n            }\n            catch (err) {\n                error = err;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:cacheable-response:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * This class allows you to set up rules determining what\n * status codes and/or headers need to be present in order for a\n * [`Response`](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n * to be considered cacheable.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponse {\n    /**\n     * To construct a new CacheableResponse instance you must provide at least\n     * one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.statuses || config.headers)) {\n                throw new WorkboxError('statuses-or-headers-required', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.statuses) {\n                assert.isArray(config.statuses, {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.statuses',\n                });\n            }\n            if (config.headers) {\n                assert.isType(config.headers, 'object', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.headers',\n                });\n            }\n        }\n        this._statuses = config.statuses;\n        this._headers = config.headers;\n    }\n    /**\n     * Checks a response to see whether it's cacheable or not, based on this\n     * object's configuration.\n     *\n     * @param {Response} response The response whose cacheability is being\n     * checked.\n     * @return {boolean} `true` if the `Response` is cacheable, and `false`\n     * otherwise.\n     */\n    isResponseCacheable(response) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(response, Response, {\n                moduleName: 'workbox-cacheable-response',\n                className: 'CacheableResponse',\n                funcName: 'isResponseCacheable',\n                paramName: 'response',\n            });\n        }\n        let cacheable = true;\n        if (this._statuses) {\n            cacheable = this._statuses.includes(response.status);\n        }\n        if (this._headers && cacheable) {\n            cacheable = Object.keys(this._headers).some((headerName) => {\n                return response.headers.get(headerName) === this._headers[headerName];\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (!cacheable) {\n                logger.groupCollapsed(`The request for ` +\n                    `'${getFriendlyURL(response.url)}' returned a response that does ` +\n                    `not meet the criteria for being cached.`);\n                logger.groupCollapsed(`View cacheability criteria here.`);\n                logger.log(`Cacheable statuses: ` +\n                    JSON.stringify(this._statuses));\n                logger.log(`Cacheable headers: ` +\n                    JSON.stringify(this._headers, null, 2));\n                logger.groupEnd();\n                const logFriendlyHeaders = {};\n                response.headers.forEach((value, key) => {\n                    logFriendlyHeaders[key] = value;\n                });\n                logger.groupCollapsed(`View response status and headers here.`);\n                logger.log(`Response status: ` + response.status);\n                logger.log(`Response headers: ` +\n                    JSON.stringify(logFriendlyHeaders, null, 2));\n                logger.groupEnd();\n                logger.groupCollapsed(`View full response details here.`);\n                logger.log(response.headers);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n            }\n        }\n        return cacheable;\n    }\n}\nexport { CacheableResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse } from './CacheableResponse.js';\nimport './_version.js';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponsePlugin {\n    /**\n     * To construct a new CacheableResponsePlugin instance you must provide at\n     * least one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config) {\n        /**\n         * @param {Object} options\n         * @param {Response} options.response\n         * @return {Response|null}\n         * @private\n         */\n        this.cacheWillUpdate = async ({ response }) => {\n            if (this._cacheableResponse.isResponseCacheable(response)) {\n                return response;\n            }\n            return null;\n        };\n        this._cacheableResponse = new CacheableResponse(config);\n    }\n}\nexport { CacheableResponsePlugin };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    promise.then(() => { });\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof module:workbox-core\n */\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A class that wraps common IndexedDB functionality in a promise-based API.\n * It exposes all the underlying power and functionality of IndexedDB, but\n * wraps the most commonly used features in a way that's much simpler to use.\n *\n * @private\n */\nexport class DBWrapper {\n    /**\n     * @param {string} name\n     * @param {number} version\n     * @param {Object=} [callback]\n     * @param {!Function} [callbacks.onupgradeneeded]\n     * @param {!Function} [callbacks.onversionchange] Defaults to\n     *     DBWrapper.prototype._onversionchange when not specified.\n     * @private\n     */\n    constructor(name, version, { onupgradeneeded, onversionchange, } = {}) {\n        this._db = null;\n        this._name = name;\n        this._version = version;\n        this._onupgradeneeded = onupgradeneeded;\n        this._onversionchange = onversionchange || (() => this.close());\n    }\n    /**\n     * Returns the IDBDatabase instance (not normally needed).\n     * @return {IDBDatabase|undefined}\n     *\n     * @private\n     */\n    get db() {\n        return this._db;\n    }\n    /**\n     * Opens a connected to an IDBDatabase, invokes any onupgradedneeded\n     * callback, and added an onversionchange callback to the database.\n     *\n     * @return {IDBDatabase}\n     * @private\n     */\n    async open() {\n        if (this._db)\n            return;\n        this._db = await new Promise((resolve, reject) => {\n            // This flag is flipped to true if the timeout callback runs prior\n            // to the request failing or succeeding. Note: we use a timeout instead\n            // of an onblocked handler since there are cases where onblocked will\n            // never never run. A timeout better handles all possible scenarios:\n            // https://github.com/w3c/IndexedDB/issues/223\n            let openRequestTimedOut = false;\n            setTimeout(() => {\n                openRequestTimedOut = true;\n                reject(new Error('The open request was blocked and timed out'));\n            }, this.OPEN_TIMEOUT);\n            const openRequest = indexedDB.open(this._name, this._version);\n            openRequest.onerror = () => reject(openRequest.error);\n            openRequest.onupgradeneeded = (evt) => {\n                if (openRequestTimedOut) {\n                    openRequest.transaction.abort();\n                    openRequest.result.close();\n                }\n                else if (typeof this._onupgradeneeded === 'function') {\n                    this._onupgradeneeded(evt);\n                }\n            };\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (openRequestTimedOut) {\n                    db.close();\n                }\n                else {\n                    db.onversionchange = this._onversionchange.bind(this);\n                    resolve(db);\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * Polyfills the native `getKey()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @return {Array}\n     * @private\n     */\n    async getKey(storeName, query) {\n        return (await this.getAllKeys(storeName, query, 1))[0];\n    }\n    /**\n     * Polyfills the native `getAll()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAll(storeName, query, count) {\n        return await this.getAllMatching(storeName, { query, count });\n    }\n    /**\n     * Polyfills the native `getAllKeys()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAllKeys(storeName, query, count) {\n        const entries = await this.getAllMatching(storeName, { query, count, includeKeys: true });\n        return entries.map((entry) => entry.key);\n    }\n    /**\n     * Supports flexible lookup in an object store by specifying an index,\n     * query, direction, and count. This method returns an array of objects\n     * with the signature .\n     *\n     * @param {string} storeName\n     * @param {Object} [opts]\n     * @param {string} [opts.index] The index to use (if specified).\n     * @param {*} [opts.query]\n     * @param {IDBCursorDirection} [opts.direction]\n     * @param {number} [opts.count] The max number of results to return.\n     * @param {boolean} [opts.includeKeys] When true, the structure of the\n     *     returned objects is changed from an array of values to an array of\n     *     objects in the form {key, primaryKey, value}.\n     * @return {Array}\n     * @private\n     */\n    async getAllMatching(storeName, { index, query = null, // IE/Edge errors if query === `undefined`.\n    direction = 'next', count, includeKeys = false, } = {}) {\n        return await this.transaction([storeName], 'readonly', (txn, done) => {\n            const store = txn.objectStore(storeName);\n            const target = index ? store.index(index) : store;\n            const results = [];\n            const request = target.openCursor(query, direction);\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    results.push(includeKeys ? cursor : cursor.value);\n                    if (count && results.length >= count) {\n                        done(results);\n                    }\n                    else {\n                        cursor.continue();\n                    }\n                }\n                else {\n                    done(results);\n                }\n            };\n        });\n    }\n    /**\n     * Accepts a list of stores, a transaction type, and a callback and\n     * performs a transaction. A promise is returned that resolves to whatever\n     * value the callback chooses. The callback holds all the transaction logic\n     * and is invoked with two arguments:\n     *   1. The IDBTransaction object\n     *   2. A `done` function, that's used to resolve the promise when\n     *      when the transaction is done, if passed a value, the promise is\n     *      resolved to that value.\n     *\n     * @param {Array<string>} storeNames An array of object store names\n     *     involved in the transaction.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {!Function} callback\n     * @return {*} The result of the transaction ran by the callback.\n     * @private\n     */\n    async transaction(storeNames, type, callback) {\n        await this.open();\n        return await new Promise((resolve, reject) => {\n            const txn = this._db.transaction(storeNames, type);\n            txn.onabort = () => reject(txn.error);\n            txn.oncomplete = () => resolve();\n            callback(txn, (value) => resolve(value));\n        });\n    }\n    /**\n     * Delegates async to a native IDBObjectStore method.\n     *\n     * @param {string} method The method name.\n     * @param {string} storeName The object store name.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {...*} args The list of args to pass to the native method.\n     * @return {*} The result of the transaction.\n     * @private\n     */\n    async _call(method, storeName, type, ...args) {\n        const callback = (txn, done) => {\n            const objStore = txn.objectStore(storeName);\n            // TODO(philipwalton): Fix this underlying TS2684 error.\n            // @ts-ignore\n            const request = objStore[method].apply(objStore, args);\n            request.onsuccess = () => done(request.result);\n        };\n        return await this.transaction([storeName], type, callback);\n    }\n    /**\n     * Closes the connection opened by `DBWrapper.open()`. Generally this method\n     * doesn't need to be called since:\n     *   1. It's usually better to keep a connection open since opening\n     *      a new connection is somewhat slow.\n     *   2. Connections are automatically closed when the reference is\n     *      garbage collected.\n     * The primary use case for needing to close a connection is when another\n     * reference (typically in another tab) needs to upgrade it and would be\n     * blocked by the current, open connection.\n     *\n     * @private\n     */\n    close() {\n        if (this._db) {\n            this._db.close();\n            this._db = null;\n        }\n    }\n}\n// Exposed on the prototype to let users modify the default timeout on a\n// per-instance or global basis.\nDBWrapper.prototype.OPEN_TIMEOUT = 2000;\n// Wrap native IDBObjectStore methods according to their mode.\nconst methodsToWrap = {\n    readonly: ['get', 'count', 'getKey', 'getAll', 'getAllKeys'],\n    readwrite: ['add', 'put', 'clear', 'delete'],\n};\nfor (const [mode, methods] of Object.entries(methodsToWrap)) {\n    for (const method of methods) {\n        if (method in IDBObjectStore.prototype) {\n            // Don't use arrow functions here since we're outside of the class.\n            DBWrapper.prototype[method] =\n                async function (storeName, ...args) {\n                    return await this._call(method, storeName, mode, ...args);\n                };\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n    await new Promise((resolve, reject) => {\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = () => {\n            reject(request.error);\n        };\n        request.onblocked = () => {\n            reject(new Error('Delete blocked'));\n        };\n        request.onsuccess = () => {\n            resolve();\n        };\n    });\n};\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { DBWrapper } from 'workbox-core/_private/DBWrapper.js';\nimport { deleteDatabase } from 'workbox-core/_private/deleteDatabase.js';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst OBJECT_STORE_NAME = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheName;\n        this._db = new DBWrapper(DB_NAME, 1, {\n            onupgradeneeded: (event) => this._handleUpgrade(event),\n        });\n    }\n    /**\n     * Should perform an upgrade of indexedDB.\n     *\n     * @param {Event} event\n     *\n     * @private\n     */\n    _handleUpgrade(event) {\n        const db = event.target.result;\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n        // Previous versions of `workbox-expiration` used `this._cacheName`\n        // as the IDBDatabase name.\n        deleteDatabase(this._cacheName);\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        await this._db.put(OBJECT_STORE_NAME, entry);\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const entry = await this._db.get(OBJECT_STORE_NAME, this._getId(url));\n        return entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const entriesToDelete = await this._db.transaction(OBJECT_STORE_NAME, 'readwrite', (txn, done) => {\n            const store = txn.objectStore(OBJECT_STORE_NAME);\n            const request = store.index('timestamp').openCursor(null, 'prev');\n            const entriesToDelete = [];\n            let entriesNotDeletedCount = 0;\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    const result = cursor.value;\n                    // TODO(philipwalton): once we can use a multi-key index, we\n                    // won't have to check `cacheName` here.\n                    if (result.cacheName === this._cacheName) {\n                        // Delete an entry if it's older than the max age or\n                        // if we already have the max number allowed.\n                        if ((minTimestamp && result.timestamp < minTimestamp) ||\n                            (maxCount && entriesNotDeletedCount >= maxCount)) {\n                            // TODO(philipwalton): we should be able to delete the\n                            // entry right here, but doing so causes an iteration\n                            // bug in Safari stable (fixed in TP). Instead we can\n                            // store the keys of the entries to delete, and then\n                            // delete the separate transactions.\n                            // https://github.com/GoogleChrome/workbox/issues/1978\n                            // cursor.delete();\n                            // We only need to return the URL, not the whole entry.\n                            entriesToDelete.push(cursor.value);\n                        }\n                        else {\n                            entriesNotDeletedCount++;\n                        }\n                    }\n                    cursor.continue();\n                }\n                else {\n                    done(entriesToDelete);\n                }\n            };\n        });\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await this._db.delete(OBJECT_STORE_NAME, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof module:workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._matchOptions = config.matchOptions;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds ?\n            Date.now() - (this._maxAgeSeconds * 1000) : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url, this._matchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ?\n                    'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - (this._maxAgeSeconds * 1000);\n            return (timestamp < expireOlderThan);\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in a `workbox-strategy` to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * It can only be used with `workbox-strategy` instances that have a\n * [custom `cacheName` property set](/web/tools/workbox/guides/configure-workbox#custom_cache_names_in_strategies).\n * In other words, it can't be used to expire entries in strategy that uses the\n * default runtime cache name.\n *\n * Whenever a cached request is used or updated, this plugin will look\n * at the associated cache and remove any old or extra requests.\n *\n * When using `maxAgeSeconds`, requests may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached request has been used. If the request has a \"Date\" header, then\n * a light weight expiration check is performed and the request will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof module:workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - (this._maxAgeSeconds * 1000);\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:recipes:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { StaleWhileRevalidate } from 'workbox-strategies/StaleWhileRevalidate.js';\nimport { CacheFirst } from 'workbox-strategies/CacheFirst.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport { ExpirationPlugin } from 'workbox-expiration/ExpirationPlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [Google fonts]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#google_fonts} caching recipe\n *\n * @memberof module:workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cachePrefix] Cache prefix for caching stylesheets and webfonts. Defaults to google-fonts\n * @param {number} [options.maxAgeSeconds] Maximum age, in seconds, that font entries will be cached for. Defaults to 1 year\n * @param {number} [options.maxEntries] Maximum number of fonts that will be cached. Defaults to 30\n */\nfunction googleFontsCache(options = {}) {\n    const sheetCacheName = `${options.cachePrefix || 'google-fonts'}-stylesheets`;\n    const fontCacheName = `${options.cachePrefix || 'google-fonts'}-webfonts`;\n    const maxAgeSeconds = options.maxAgeSeconds || 60 * 60 * 24 * 365;\n    const maxEntries = options.maxEntries || 30;\n    // Cache the Google Fonts stylesheets with a stale-while-revalidate strategy.\n    registerRoute(({ url }) => url.origin === 'https://fonts.googleapis.com', new StaleWhileRevalidate({\n        cacheName: sheetCacheName,\n    }));\n    // Cache the underlying font files with a cache-first strategy for 1 year.\n    registerRoute(({ url }) => url.origin === 'https://fonts.gstatic.com', new CacheFirst({\n        cacheName: fontCacheName,\n        plugins: [\n            new CacheableResponsePlugin({\n                statuses: [0, 200],\n            }),\n            new ExpirationPlugin({\n                maxAgeSeconds,\n                maxEntries,\n            }),\n        ],\n    }));\n}\nexport { googleFontsCache };\n","import './_version.js';\n/**\n * @memberof module:workbox-recipes\n \n * @param {Object} options\n * @param {string[]} options.urls Paths to warm the strategy's cache with\n * @param {Strategy} options.strategy Strategy to use\n */\nfunction warmStrategyCache(options) {\n    self.addEventListener('install', event => {\n        const done = options.urls.map(path => options.strategy.handleAll({\n            event,\n            request: new Request(path),\n        })[1]);\n        event.waitUntil(Promise.all(done));\n    });\n}\nexport { warmStrategyCache };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { warmStrategyCache } from './warmStrategyCache';\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { CacheFirst } from 'workbox-strategies/CacheFirst.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport { ExpirationPlugin } from 'workbox-expiration/ExpirationPlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [image caching recipe]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#caching_images}\n *\n * @memberof module:workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to images\n* @param {RouteMatchCallback} [options.matchCallback] Workbox callback function to call to match to. Defaults to request.destination === 'image';\n * @param {number} [options.maxAgeSeconds] Maximum age, in seconds, that font entries will be cached for. Defaults to 30 days\n * @param {number} [options.maxEntries] Maximum number of images that will be cached. Defaults to 60\n * @param {WorkboxPlugin[]} [options.plugins] Additional plugins to use for this recipe\n * @param {string[]} [options.warmCache] Paths to call to use to warm this cache\n */\nfunction imageCache(options = {}) {\n    const defaultMatchCallback = ({ request }) => request.destination === 'image';\n    const cacheName = options.cacheName || 'images';\n    const matchCallback = options.matchCallback || defaultMatchCallback;\n    const maxAgeSeconds = options.maxAgeSeconds || 30 * 24 * 60 * 60;\n    const maxEntries = options.maxEntries || 60;\n    const plugins = (options.plugins || []);\n    plugins.push(new CacheableResponsePlugin({\n        statuses: [0, 200],\n    }));\n    plugins.push(new ExpirationPlugin({\n        maxEntries,\n        maxAgeSeconds\n    }));\n    const strategy = new CacheFirst({\n        cacheName,\n        plugins,\n    });\n    registerRoute(matchCallback, strategy);\n    // Warms the cache\n    if (options.warmCache) {\n        warmStrategyCache({ urls: options.warmCache, strategy });\n    }\n}\nexport { imageCache };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { warmStrategyCache } from './warmStrategyCache';\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { StaleWhileRevalidate } from 'workbox-strategies/StaleWhileRevalidate.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [CSS and JavaScript files recipe]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#cache_css_and_javascript_files}\n *\n * @memberof module:workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to static-resources\n * @param {RouteMatchCallback} [options.matchCallback] Workbox callback function to call to match to. Defaults to request.destination === 'style' || request.destination === 'script' || request.destination === 'worker';\n * @param {WorkboxPlugin[]} [options.plugins] Additional plugins to use for this recipe\n * @param {string[]} [options.warmCache] Paths to call to use to warm this cache\n */\nfunction staticResourceCache(options = {}) {\n    const defaultMatchCallback = ({ request }) => request.destination === 'style' || request.destination === 'script' || request.destination === 'worker';\n    const cacheName = options.cacheName || 'static-resources';\n    const matchCallback = options.matchCallback || defaultMatchCallback;\n    const plugins = (options.plugins || []);\n    plugins.push(new CacheableResponsePlugin({\n        statuses: [0, 200],\n    }));\n    const strategy = new StaleWhileRevalidate({\n        cacheName,\n        plugins,\n    });\n    registerRoute(matchCallback, strategy);\n    // Warms the cache\n    if (options.warmCache) {\n        warmStrategyCache({ urls: options.warmCache, strategy });\n    }\n}\nexport { staticResourceCache };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache}\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass NetworkFirst extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: this.constructor.name,\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, logs, handler });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({ timeoutId, request, logs, handler });\n        promises.push(networkPromise);\n        const response = await handler.waitUntil((async () => {\n            // Promise.race() will resolve as soon as the first promise resolves.\n            return await handler.waitUntil(Promise.race(promises)) ||\n                // If Promise.race() resolved with null, it might be due to a network\n                // timeout + a cache miss. If that were to happen, we'd rather wait until\n                // the networkPromise resolves instead of returning null.\n                // Note that it's fine to await an already-resolved promise, so we don't\n                // have to check to see if it's still \"in flight\".\n                await networkPromise;\n        })());\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, handler }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await handler.cacheMatch(request));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, handler }) {\n        let error;\n        let response;\n        try {\n            response = await handler.fetchAndCachePut(request);\n        }\n        catch (fetchError) {\n            error = fetchError;\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await handler.cacheMatch(request);\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this.cacheName}'` +\n                        ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this.cacheName}' cache.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { warmStrategyCache } from './warmStrategyCache';\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { NetworkFirst } from 'workbox-strategies/NetworkFirst.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a page caching recipe with a network timeout\n *\n * @memberof module:workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to pages\n * @param {RouteMatchCallback} [options.matchCallback] Workbox callback function to call to match to. Defaults to request.mode === 'navigate';\n * @param {number} [options.networkTimoutSeconds] Maximum amount of time, in seconds, to wait on the network before falling back to cache. Defaults to 3\n * @param {WorkboxPlugin[]} [options.plugins] Additional plugins to use for this recipe\n * @param {string[]} [options.warmCache] Paths to call to use to warm this cache\n */\nfunction pageCache(options = {}) {\n    const defaultMatchCallback = ({ request }) => request.mode === 'navigate';\n    const cacheName = options.cacheName || 'pages';\n    const matchCallback = options.matchCallback || defaultMatchCallback;\n    const networkTimeoutSeconds = options.networkTimeoutSeconds || 3;\n    const plugins = (options.plugins || []);\n    plugins.push(new CacheableResponsePlugin({\n        statuses: [0, 200],\n    }));\n    const strategy = new NetworkFirst({\n        networkTimeoutSeconds,\n        cacheName,\n        plugins,\n    });\n    // Registers the route\n    registerRoute(matchCallback, strategy);\n    // Warms the cache\n    if (options.warmCache) {\n        warmStrategyCache({ urls: options.warmCache, strategy });\n    }\n}\nexport { pageCache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * If a Route throws an error while handling a request, this `handler`\n * will be called and given a chance to provide a response.\n *\n * @param {module:workbox-routing~handlerCallback} handler A callback\n * function that returns a Promise resulting in a Response.\n *\n * @memberof module:workbox-routing\n */\nfunction setCatchHandler(handler) {\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.setCatchHandler(handler);\n}\nexport { setCatchHandler };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                // TODO: `state` should never be undefined...\n                const url = state.originalRequest.url;\n                if (cachedResponse) {\n                    this.notUpdatedURLs.push(url);\n                }\n                else {\n                    this.updatedURLs.push(url);\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            const cacheKey = params && params.cacheKey ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            return cacheKey ? new Request(cacheKey) : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\n/**\n * A [Strategy]{@link module:workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork = options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(PrecacheStrategy.copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (!response) {\n            // If this is an `install` event then populate the cache. If this is a\n            // `fetch` event (or any other event) then respond with the cached\n            // response.\n            if (handler.event && handler.event.type === 'install') {\n                return await this._handleInstall(request, handler);\n            }\n            return await this._handleFetch(request, handler);\n        }\n        return response;\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        // Fall back to the network if we don't have a cached response\n        // (perhaps due to manual cache cleanup).\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network instead.`);\n            }\n            response = await handler.fetch(request);\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = handler.params && handler.params.cacheKey ||\n                await handler.getCacheKey(request, 'read');\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` +\n                getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey.url)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        this._useDefaultCacheabilityPluginIfNeeded();\n        const response = await handler.fetch(request);\n        // Make sure we defer cachePut() until after we know the response\n        // should be cached; see https://github.com/GoogleChrome/workbox/issues/2737\n        const wasCached = await handler.cachePut(request, response.clone());\n        if (!wasCached) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * This method is complex, as there a number of things to account for:\n     *\n     * The `plugins` array can be set at construction, and/or it might be added to\n     * to at any time before the strategy is used.\n     *\n     * At the time the strategy is used (i.e. during an `install` event), there\n     * needs to be at least one plugin that implements `cacheWillUpdate` in the\n     * array, other than `copyRedirectedCacheableResponsesPlugin`.\n     *\n     * - If this method is called and there are no suitable `cacheWillUpdate`\n     * plugins, we need to add `defaultPrecacheCacheabilityPlugin`.\n     *\n     * - If this method is called and there is exactly one `cacheWillUpdate`, then\n     * we don't have to do anything (this might be a previously added\n     * `defaultPrecacheCacheabilityPlugin`, or it might be a custom plugin).\n     *\n     * - If this method is called and there is more than one `cacheWillUpdate`,\n     * then we need to check if one is `defaultPrecacheCacheabilityPlugin`. If so,\n     * we need to remove it. (This situation is unlikely, but it could happen if\n     * the strategy is used multiple times, the first without a `cacheWillUpdate`,\n     * and then later on after manually adding a custom `cacheWillUpdate`.)\n     *\n     * See https://github.com/GoogleChrome/workbox/issues/2737 for more context.\n     *\n     * @private\n     */\n    _useDefaultCacheabilityPluginIfNeeded() {\n        let defaultPluginIndex = null;\n        let cacheWillUpdatePluginCount = 0;\n        for (const [index, plugin] of this.plugins.entries()) {\n            // Ignore the copy redirected plugin when determining what to do.\n            if (plugin === PrecacheStrategy.copyRedirectedCacheableResponsesPlugin) {\n                continue;\n            }\n            // Save the default plugin's index, in case it needs to be removed.\n            if (plugin === PrecacheStrategy.defaultPrecacheCacheabilityPlugin) {\n                defaultPluginIndex = index;\n            }\n            if (plugin.cacheWillUpdate) {\n                cacheWillUpdatePluginCount++;\n            }\n        }\n        if (cacheWillUpdatePluginCount === 0) {\n            this.plugins.push(PrecacheStrategy.defaultPrecacheCacheabilityPlugin);\n        }\n        else if (cacheWillUpdatePluginCount > 1 && defaultPluginIndex !== null) {\n            // Only remove the default plugin; multiple custom plugins are allowed.\n            this.plugins.splice(defaultPluginIndex, 1);\n        }\n        // Nothing needs to be done if cacheWillUpdatePluginCount is 1\n    }\n}\nPrecacheStrategy.defaultPrecacheCacheabilityPlugin = {\n    async cacheWillUpdate({ response }) {\n        if (!response || response.status >= 400) {\n            return null;\n        }\n        return response;\n    }\n};\nPrecacheStrategy.copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    }\n};\nexport { PrecacheStrategy };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {module:workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = { cacheKey, ...options.params };\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#matchPrecache} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call\n * {@link PrecacheController#matchPrecache} on that instance,\n * instead of using this function.\n *\n * @param {string|Request} request The key (without revisioning parameters)\n * to look up in the precache.\n * @return {Promise<Response|undefined>}\n *\n * @memberof module:workbox-precaching\n */\nfunction matchPrecache(request) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.matchPrecache(request);\n}\nexport { matchPrecache };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { setCatchHandler } from 'workbox-routing/setCatchHandler.js';\nimport { matchPrecache } from 'workbox-precaching/matchPrecache.js';\nimport './_version.js';\n/**\n * An implementation of the [comprehensive fallbacks recipe]{@link https://developers.google.com/web/tools/workbox/guides/advanced-recipes#comprehensive_fallbacks}. Be sure to include the fallbacks in your precache injection\n *\n * @memberof module:workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.pageFallback] Precache name to match for pag fallbacks. Defaults to offline.html\n * @param {string} [options.imageFallback] Precache name to match for image fallbacks.\n * @param {string} [options.fontFallback] Precache name to match for font fallbacks.\n */\nfunction offlineFallback(options = {}) {\n    const pageFallback = options.pageFallback || 'offline.html';\n    const imageFallback = options.imageFallback || false;\n    const fontFallback = options.fontFallback || false;\n    self.addEventListener('install', event => {\n        const files = [pageFallback];\n        if (imageFallback) {\n            files.push(imageFallback);\n        }\n        if (fontFallback) {\n            files.push(fontFallback);\n        }\n        event.waitUntil(self.caches.open('workbox-offline-fallbacks').then(cache => cache.addAll(files)));\n    });\n    const handler = async (options) => {\n        const dest = options.request.destination;\n        const cache = await self.caches.open('workbox-offline-fallbacks');\n        if (dest === \"document\") {\n            const match = await matchPrecache(pageFallback) || await cache.match(pageFallback);\n            return match || Response.error();\n        }\n        if (dest === \"image\" && imageFallback !== false) {\n            const match = await matchPrecache(imageFallback) || await cache.match(imageFallback);\n            return match || Response.error();\n        }\n        if (dest === \"font\" && fontFallback !== false) {\n            const match = await matchPrecache(fontFallback) || await cache.match(fontFallback);\n            return match || Response.error();\n        }\n        return Response.error();\n    };\n    setCatchHandler(handler);\n}\nexport { offlineFallback };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { googleFontsCache } from './googleFontsCache';\nimport { imageCache } from './imageCache';\nimport { staticResourceCache } from './staticResourceCache';\nimport { pageCache } from './pageCache';\nimport { offlineFallback } from './offlineFallback';\nimport { warmStrategyCache } from './warmStrategyCache';\nimport './_version.js';\n/**\n * @module workbox-recipes\n */\nexport { googleFontsCache, imageCache, staticResourceCache, pageCache, offlineFallback, warmStrategyCache };\n","export * from './index.js';","import {googleFontsCache} from 'workbox-recipes'\n\n// cache any loaded google fonts\ngoogleFontsCache();\n\n// listen for a client giving us messages\nself.addEventListener('message', function (event) {\n    // client asked to begin using this new worker (see onAppUpdated)\n    if (event.data.action === 'skipWaiting') {\n        self.skipWaiting();\n    }\n});"]}